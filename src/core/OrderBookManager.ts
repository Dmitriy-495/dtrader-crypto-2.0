/**
 * OrderBookManager - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–π –∫–Ω–∏–≥–æ–π –æ—Ä–¥–µ—Ä–æ–≤
 * –†–µ–∞–ª–∏–∑—É–µ—Ç –∞–ª–≥–æ—Ä–∏—Ç–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Gate.io
 */

import { OrderBook, OrderBookLevel, OrderBookUpdate } from "../types";
import { GateIO } from "../GateIO";
import { LogBroadcaster } from "./LogBroadcaster";
import { MessageType } from "../types";

// ============================================================================
// –¢–ò–ü–´ –ò –ò–ù–¢–ï–†–§–ï–ô–°–´
// ============================================================================

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è OrderBookManager
 */
export interface OrderBookManagerConfig {
  symbol: string; // –¢–æ—Ä–≥–æ–≤–∞—è –ø–∞—Ä–∞ (ETH_USDT)
  depth: number; // –ì–ª—É–±–∏–Ω–∞ order book (10, 20, 50, 100)
  gateio: GateIO; // –≠–∫–∑–µ–º–ø–ª—è—Ä GateIO –¥–ª—è REST –∑–∞–ø—Ä–æ—Å–æ–≤
}

/**
 * –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
 */
enum SyncState {
  NOT_INITIALIZED = "NOT_INITIALIZED",
  CACHING_UPDATES = "CACHING_UPDATES",
  SYNCHRONIZED = "SYNCHRONIZED",
}

// ============================================================================
// –ö–õ–ê–°–° ORDERBOOKMANAGER
// ============================================================================

export class OrderBookManager {
  private config: OrderBookManagerConfig;
  private orderBook: OrderBook | null = null;
  private updateCache: OrderBookUpdate[] = [];
  private syncState: SyncState = SyncState.NOT_INITIALIZED;

  /**
   * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
   */
  constructor(config: OrderBookManagerConfig) {
    this.config = config;
    console.log(
      `üìñ OrderBookManager —Å–æ–∑–¥–∞–Ω –¥–ª—è ${config.symbol} (–≥–ª—É–±–∏–Ω–∞: ${config.depth})`
    );
  }

  // ==========================================================================
  // –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ò –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø
  // ==========================================================================

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç Order Book
   * –®–∞–≥–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Gate.io:
   * 1. –ù–∞—á–∞—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
   * 2. –ü–æ–ª—É—á–∏—Ç—å —Å–Ω–∞–ø—à–æ—Ç —á–µ—Ä–µ–∑ REST API
   * 3. –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
   */
  async initialize(): Promise<void> {
    console.log(`\nüîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Order Book –¥–ª—è ${this.config.symbol}...`);

    try {
      // –®–∞–≥ 1: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
      this.syncState = SyncState.CACHING_UPDATES;
      console.log("üì¶ –ù–∞—á–∞—Ç–æ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...");

      // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ —á—Ç–æ–±—ã –Ω–∞–∫–æ–ø–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      await this.sleep(1000);

      // –®–∞–≥ 2: –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—ã–π —Å–Ω–∞–ø—à–æ—Ç —á–µ—Ä–µ–∑ REST API
      console.log("üì° –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ —Å–Ω–∞–ø—à–æ—Ç–∞ —á–µ—Ä–µ–∑ REST API...");
      const snapshot = await this.config.gateio.getOrderBook(
        this.config.symbol,
        this.config.depth
      );

      // –ü–∞—Ä—Å–∏–º —Å–Ω–∞–ø—à–æ—Ç
      const baseId = parseInt(snapshot.id);
      console.log(`üìä –°–Ω–∞–ø—à–æ—Ç –ø–æ–ª—É—á–µ–Ω (baseID: ${baseId})`);

      // –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π order book
      this.orderBook = {
        symbol: this.config.symbol,
        lastUpdateId: baseId,
        bids: snapshot.bids.map((b: string[]) => ({
          price: parseFloat(b[0]),
          amount: parseFloat(b[1]),
        })),
        asks: snapshot.asks.map((a: string[]) => ({
          price: parseFloat(a[0]),
          amount: parseFloat(a[1]),
        })),
        timestamp: Date.now(),
      };

      // –®–∞–≥ 3: –ü—Ä–∏–º–µ–Ω—è–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      console.log(
        `üì¶ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ ${this.updateCache.length} –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...`
      );

      let appliedUpdates = 0;
      for (const update of this.updateCache) {
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã–µ –∏–¥—É—Ç –ø–æ—Å–ª–µ –±–∞–∑–æ–≤–æ–≥–æ —Å–Ω–∞–ø—à–æ—Ç–∞
        // –£—Å–ª–æ–≤–∏–µ: U <= baseID+1 AND u >= baseID+1
        if (
          update.firstUpdateId <= baseId + 1 &&
          update.lastUpdateId >= baseId + 1
        ) {
          this.applyUpdate(update);
          appliedUpdates++;
        }
      }

      // –û—á–∏—â–∞–µ–º –∫—ç—à
      this.updateCache = [];
      this.syncState = SyncState.SYNCHRONIZED;

      console.log(
        `‚úÖ Order Book —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω! –ü—Ä–∏–º–µ–Ω–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: ${appliedUpdates}`
      );
      this.displayOrderBook();
    } catch (error: any) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Order Book:", error.message);
      this.syncState = SyncState.NOT_INITIALIZED;
      throw error;
    }
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç WebSocket
   */
  processUpdate(updateData: any): void {
    const update: OrderBookUpdate = {
      firstUpdateId: updateData.U,
      lastUpdateId: updateData.u,
      symbol: updateData.s,
      bids: updateData.b.map((b: string[]) => ({
        price: parseFloat(b[0]),
        amount: parseFloat(b[1]),
      })),
      asks: updateData.a.map((a: string[]) => ({
        price: parseFloat(a[0]),
        amount: parseFloat(a[1]),
      })),
      timestamp: Date.now(),
    };

    // –ï—Å–ª–∏ –µ—â–µ –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã, –∫—ç—à–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    if (this.syncState === SyncState.CACHING_UPDATES) {
      this.updateCache.push(update);
      return;
    }

    // –ï—Å–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã, –ø—Ä–∏–º–µ–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    if (this.syncState === SyncState.SYNCHRONIZED) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å: U –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å baseID+1
      if (update.firstUpdateId > this.orderBook!.lastUpdateId + 1) {
        console.error(
          `‚ö†Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è! Expected: ${
            this.orderBook!.lastUpdateId + 1
          }, Got: ${update.firstUpdateId}`
        );
        console.log("üîÑ –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è...");
        this.resync();
        return;
      }

      // –ï—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä–æ–µ, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
      if (update.lastUpdateId <= this.orderBook!.lastUpdateId) {
        return;
      }

      this.applyUpdate(update);
    }
  }

  /**
   * –ü—Ä–∏–º–µ–Ω—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É Order Book
   */
  private applyUpdate(update: OrderBookUpdate): void {
    if (!this.orderBook) return;

    // –û–±–Ω–æ–≤–ª—è–µ–º bids
    for (const bid of update.bids) {
      this.updateLevel(this.orderBook.bids, bid, "desc");
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º asks
    for (const ask of update.asks) {
      this.updateLevel(this.orderBook.asks, ask, "asc");
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    this.orderBook.lastUpdateId = update.lastUpdateId;
    this.orderBook.timestamp = update.timestamp;
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç —É—Ä–æ–≤–µ–Ω—å –≤ –º–∞—Å—Å–∏–≤–µ (bids –∏–ª–∏ asks)
   * –ï—Å–ª–∏ amount = 0, —É–¥–∞–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å
   * –ò–Ω–∞—á–µ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º
   */
  private updateLevel(
    levels: OrderBookLevel[],
    newLevel: OrderBookLevel,
    order: "asc" | "desc"
  ): void {
    const index = levels.findIndex((l) => l.price === newLevel.price);

    // –ï—Å–ª–∏ amount = 0, —É–¥–∞–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å
    if (newLevel.amount === 0) {
      if (index !== -1) {
        levels.splice(index, 1);
      }
      return;
    }

    // –ï—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º
    if (index !== -1) {
      levels[index].amount = newLevel.amount;
    } else {
      // –ò–Ω–∞—á–µ –¥–æ–±–∞–≤–ª—è–µ–º –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º
      levels.push(newLevel);
      levels.sort((a, b) =>
        order === "desc" ? b.price - a.price : a.price - b.price
      );
    }

    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –≥–ª—É–±–∏–Ω—É
    if (levels.length > this.config.depth) {
      levels.length = this.config.depth;
    }
  }

  /**
   * –ü–µ—Ä–µ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
   */
  private async resync(): Promise<void> {
    this.syncState = SyncState.NOT_INITIALIZED;
    this.orderBook = null;
    this.updateCache = [];

    // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–±—É–µ–º –∑–∞–Ω–æ–≤–æ
    await this.sleep(1000);
    await this.initialize();
  }

  // ==========================================================================
  // –ü–û–õ–£–ß–ï–ù–ò–ï –î–ê–ù–ù–´–•
  // ==========================================================================

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π Order Book
   */
  getOrderBook(): OrderBook | null {
    return this.orderBook;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –ª—É—á—à—É—é —Ü–µ–Ω—É –ø–æ–∫—É–ø–∫–∏ (bid)
   */
  getBestBid(): number | null {
    if (!this.orderBook || this.orderBook.bids.length === 0) return null;
    return this.orderBook.bids[0].price;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –ª—É—á—à—É—é —Ü–µ–Ω—É –ø—Ä–æ–¥–∞–∂–∏ (ask)
   */
  getBestAsk(): number | null {
    if (!this.orderBook || this.orderBook.asks.length === 0) return null;
    return this.orderBook.asks[0].price;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–µ–¥ (—Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –ª—É—á—à–∏–º bid –∏ ask)
   */
  getSpread(): number | null {
    const bid = this.getBestBid();
    const ask = this.getBestAsk();
    if (bid === null || ask === null) return null;
    return ask - bid;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å–µ—Ä–µ–¥–∏–Ω—É —Å–ø—Ä–µ–¥–∞ (mid price)
   */
  getMidPrice(): number | null {
    const bid = this.getBestBid();
    const ask = this.getBestAsk();
    if (bid === null || ask === null) return null;
    return (bid + ask) / 2;
  }

  /**
   * –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –æ–±—â–∏–π –æ–±—ä–µ–º –≤ USDT –¥–ª—è asks (–ø–µ—Ä–≤—ã–µ N —É—Ä–æ–≤–Ω–µ–π)
   */
  getAsksVolume(levels?: number): number {
    if (!this.orderBook) return 0;

    const depth = levels !== undefined ? levels : this.config.depth;

    return this.orderBook.asks
      .slice(0, depth)
      .reduce((sum, ask) => sum + ask.price * ask.amount, 0);
  }

  /**
   * –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –æ–±—â–∏–π –æ–±—ä–µ–º –≤ USDT –¥–ª—è bids (–ø–µ—Ä–≤—ã–µ N —É—Ä–æ–≤–Ω–µ–π)
   */
  getBidsVolume(levels?: number): number {
    if (!this.orderBook) return 0;

    const depth = levels !== undefined ? levels : this.config.depth;

    return this.orderBook.bids
      .slice(0, depth)
      .reduce((sum, bid) => sum + bid.price * bid.amount, 0);
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –æ–±—ä–µ–º–æ–≤ asks/bids –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
   */
  getVolumeRatio(
    levels?: number
  ): {
    askVolume: number;
    bidVolume: number;
    askPercent: number;
    bidPercent: number;
  } | null {
    if (!this.orderBook) return null;

    const depth = levels !== undefined ? levels : this.config.depth;

    const askVolume = this.getAsksVolume(depth);
    const bidVolume = this.getBidsVolume(depth);
    const totalVolume = askVolume + bidVolume;

    if (totalVolume === 0) return null;

    return {
      askVolume,
      bidVolume,
      askPercent: (askVolume / totalVolume) * 100,
      bidPercent: (bidVolume / totalVolume) * 100,
    };
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω –ª–∏ Order Book
   */
  isSynchronized(): boolean {
    return this.syncState === SyncState.SYNCHRONIZED;
  }

  // ==========================================================================
  // –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ú–ï–¢–û–î–´
  // ==========================================================================

  /**
   * –í—ã–≤–µ—Å—Ç–∏ Order Book –≤ –∫–æ–Ω—Å–æ–ª—å (–∫–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å –æ–±—ä–µ–º–∞–º–∏)
   */
  displayOrderBook(): void {
    if (!this.orderBook) {
      console.log("üìñ Order Book –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
      return;
    }

    const ratio = this.getVolumeRatio(); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª—É–±–∏–Ω—É –∏–∑ config
    if (!ratio) {
      console.log("üìñ Order Book: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö");
      return;
    }

    const timeISO = new Date(this.orderBook.timestamp).toISOString();

    console.log(
      `üìñ ${this.orderBook.symbol} [${timeISO}] | ` +
        `ASK ${ratio.askVolume
          .toFixed(2)
          .padStart(12)} USDT (${ratio.askPercent.toFixed(1)}%) | ` +
        `BID ${ratio.bidVolume
          .toFixed(2)
          .padStart(12)} USDT (${ratio.bidPercent.toFixed(1)}%)`
    );
  }

  /**
   * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è
   */
  private sleep(ms: number): Promise<void> {
    return new Promise((resolve) => setTimeout(resolve, ms));
  }
}

/**
 * –°—Ç—Ä–∞—Ç–µ–≥–∏—è –Ω–∞ –º–∏–Ω—É—Ç–Ω–æ–º –≥—Ä–∞—Ñ–∏–∫–µ
 * –ü—Ä–æ—Å—Ç–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
 */

import { BaseStrategy, BaseStrategyConfig } from "./BaseStrategy";
import { Candle, Tick, Signal, SignalType } from "../types";

// ============================================================================
// –ò–ù–¢–ï–†–§–ï–ô–°–´
// ============================================================================

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Strategy1min
 */
export interface Strategy1minConfig extends BaseStrategyConfig {
  minCandlesRequired: number; // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤–µ—á–µ–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
}

// ============================================================================
// –ö–õ–ê–°–° STRATEGY1MIN
// ============================================================================

export class Strategy1min extends BaseStrategy {
  private strategy1minConfig: Strategy1minConfig;
  private tickCount: number = 0;

  /**
   * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
   */
  constructor(config: Strategy1minConfig) {
    super("Strategy1min", config);
    this.strategy1minConfig = config;
  }

  // ==========================================================================
  // –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø –ê–ë–°–¢–†–ê–ö–¢–ù–´–• –ú–ï–¢–û–î–û–í
  // ==========================================================================

  /**
   * –ó–∞–ø—É—Å–∫ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
   */
  onStart(): void {
    console.log(`\nüéØ –°—Ç—Ä–∞—Ç–µ–≥–∏—è ${this.name} –∑–∞–ø—É—â–µ–Ω–∞`);
    console.log(`   –ü–∞—Ä–∞: ${this.strategy1minConfig.symbol}`);
    console.log(`   –ò–Ω—Ç–µ—Ä–≤–∞–ª: ${this.strategy1minConfig.interval}`);
    console.log(
      `   –ú–∏–Ω–∏–º—É–º —Å–≤–µ—á–µ–π: ${this.strategy1minConfig.minCandlesRequired}`
    );
  }

  /**
   * –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
   */
  onStop(): void {
    console.log(`\nüõë –°—Ç—Ä–∞—Ç–µ–≥–∏—è ${this.name} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞`);
    console.log(`   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–∏–∫–æ–≤: ${this.tickCount}`);
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ —Ç–∏–∫–∞
   */
  onTick(tick: Tick): void {
    this.tickCount++;

    // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π 10-–π —Ç–∏–∫ –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Å–ø–∞–º–∞
    if (this.tickCount % 10 === 0) {
      console.log(
        `üìä –¢–∏–∫ #${this.tickCount} ${tick.symbol}: ${tick.price.toFixed(
          2
        )} USDT`
      );
    }
  }

  /**
   * –ê–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ–π —Å–≤–µ—á–∏ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∏–≥–Ω–∞–ª–æ–≤
   */
  onCandle(candle: Candle, history: Candle[]): Signal | null {
    console.log(`\nüîç ${this.name}: –ê–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ–π —Å–≤–µ—á–∏...`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    if (history.length < this.strategy1minConfig.minCandlesRequired) {
      console.log(
        `   ‚è≥ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö: ${history.length}/${this.strategy1minConfig.minCandlesRequired} —Å–≤–µ—á–µ–π`
      );
      return null;
    }

    // –ü—Ä–æ—Å—Ç–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞:
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å–≤–µ—á–∏
    const lastCandles = history.slice(-3);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–Ω–¥
    const isUptrend = this.checkUptrend(lastCandles);
    const isDowntrend = this.checkDowntrend(lastCandles);

    console.log(`   üìà –í–æ—Å—Ö–æ–¥—è—â–∏–π —Ç—Ä–µ–Ω–¥: ${isUptrend ? "–î–ê" : "–ù–ï–¢"}`);
    console.log(`   üìâ –ù–∏—Å—Ö–æ–¥—è—â–∏–π —Ç—Ä–µ–Ω–¥: ${isDowntrend ? "–î–ê" : "–ù–ï–¢"}`);

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–∏–≥–Ω–∞–ª (–ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏, –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏)
    if (isUptrend) {
      return this.createSignal(
        SignalType.BUY,
        candle,
        "–û–±–Ω–∞—Ä—É–∂–µ–Ω –≤–æ—Å—Ö–æ–¥—è—â–∏–π —Ç—Ä–µ–Ω–¥"
      );
    } else if (isDowntrend) {
      return this.createSignal(
        SignalType.SELL,
        candle,
        "–û–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–∏—Å—Ö–æ–¥—è—â–∏–π —Ç—Ä–µ–Ω–¥"
      );
    }

    return this.createSignal(SignalType.HOLD, candle, "–ù–µ—Ç —á–µ—Ç–∫–æ–≥–æ —Ç—Ä–µ–Ω–¥–∞");
  }

  // ==========================================================================
  // –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ú–ï–¢–û–î–´
  // ==========================================================================

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–æ—Å—Ö–æ–¥—è—â–∏–π —Ç—Ä–µ–Ω–¥
   * –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞: –∫–∞–∂–¥–∞—è —Å–ª–µ–¥—É—é—â–∞—è —Å–≤–µ—á–∞ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤—ã—à–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–π
   */
  private checkUptrend(candles: Candle[]): boolean {
    if (candles.length < 2) return false;

    for (let i = 1; i < candles.length; i++) {
      if (candles[i].close <= candles[i - 1].close) {
        return false;
      }
    }
    return true;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∏—Å—Ö–æ–¥—è—â–∏–π —Ç—Ä–µ–Ω–¥
   * –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞: –∫–∞–∂–¥–∞—è —Å–ª–µ–¥—É—é—â–∞—è —Å–≤–µ—á–∞ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –Ω–∏–∂–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–π
   */
  private checkDowntrend(candles: Candle[]): boolean {
    if (candles.length < 2) return false;

    for (let i = 1; i < candles.length; i++) {
      if (candles[i].close >= candles[i - 1].close) {
        return false;
      }
    }
    return true;
  }

  /**
   * –°–æ–∑–¥–∞—Ç—å —Ç–æ—Ä–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª
   */
  private createSignal(
    type: SignalType,
    candle: Candle,
    reason: string
  ): Signal {
    const signal: Signal = {
      type,
      symbol: candle.symbol,
      price: candle.close,
      amount: 0, // –ü–æ–∫–∞ –Ω–µ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
      timestamp: Date.now(),
      reason,
    };

    // –õ–æ–≥–∏—Ä—É–µ–º —Å–∏–≥–Ω–∞–ª
    const emoji =
      type === SignalType.BUY ? "üü¢" : type === SignalType.SELL ? "üî¥" : "‚ö™";
    console.log(`\n${emoji} –°–ò–ì–ù–ê–õ: ${type}`);
    console.log(`   –ü—Ä–∏—á–∏–Ω–∞: ${reason}`);
    console.log(`   –¶–µ–Ω–∞: ${signal.price.toFixed(2)} USDT`);

    return signal;
  }
}
